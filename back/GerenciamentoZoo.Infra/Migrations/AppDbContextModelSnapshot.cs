// <auto-generated />
using System;
using GerenciamentoZoo.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciamentoZoo.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimaisEntityCuidadosEntity", b =>
                {
                    b.Property<int>("AnimaisId")
                        .HasColumnType("int");

                    b.Property<int>("CuidadosId")
                        .HasColumnType("int");

                    b.HasKey("AnimaisId", "CuidadosId");

                    b.HasIndex("CuidadosId");

                    b.ToTable("AnimaisEntityCuidadosEntity");
                });

            modelBuilder.Entity("GerenciamentoZoo.Domain.Entidade.AnimaisEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Habitat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animais");
                });

            modelBuilder.Entity("GerenciamentoZoo.Domain.Entidade.CuidadosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequencia")
                        .HasColumnType("int");

                    b.Property<string>("NomeCuidado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeFrequencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cuidados");
                });

            modelBuilder.Entity("AnimaisEntityCuidadosEntity", b =>
                {
                    b.HasOne("GerenciamentoZoo.Domain.Entidade.AnimaisEntity", null)
                        .WithMany()
                        .HasForeignKey("AnimaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoZoo.Domain.Entidade.CuidadosEntity", null)
                        .WithMany()
                        .HasForeignKey("CuidadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
